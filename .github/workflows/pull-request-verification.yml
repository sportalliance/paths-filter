name: "Pull Request Verification"
on:
  pull_request:
    paths-ignore: [ '*.md' ]
    branches:
      - master
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: |
        npm install
        npm run all

  test-inline:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      id: filter
      with:
        filters: |
          error:
            - not_existing_path/**/*
          any:
            - "**/*"
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1
    - name: changes-test
      if: contains(fromJSON(steps.filter.outputs.changes), 'error') || !contains(fromJSON(steps.filter.outputs.changes), 'any')
      run: exit 1

  test-external:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      id: filter
      with:
        filters: '.github/filters.yml'
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1

  test-without-token:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      id: filter
      with:
        token: ''
        filters: '.github/filters.yml'
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1

  test-wd-without-token:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        path: somewhere
    - uses: ./somewhere
      id: filter
      with:
        token: ''
        working-directory: somewhere
        filters: '.github/filters.yml'
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1

  test-local-changes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: echo "NEW FILE" > local
    - run: git add local
    - uses: ./
      id: filter
      with:
        base: HEAD
        filters: |
          local:
            - local
    - name: filter-test
      if: steps.filter.outputs.local != 'true'
      run: exit 1
    - name: count-test
      if: steps.filter.outputs.local_count != 1
      run: exit 1

  test-change-type:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: configure GIT user
      run: git config user.email "john@nowhere.local" && git config user.name "John Doe"
    - name: modify working tree
      run: touch add.txt && rm README.md && echo "TEST" > LICENSE
    - name: commit changes
      run: git add -A && git commit -a -m 'testing this action'
    - uses: ./
      id: filter
      with:
        token: ''
        list-files: shell
        filters: |
          added:
            - added: "add.txt"
          deleted:
            - deleted: "README.md"
          modified:
            - modified: "LICENSE"
          any:
            - added|deleted|modified: "*"
    - name: Print 'added_files'
      run: echo ${{steps.filter.outputs.added_files}}
    - name: Print 'modified_files'
      run: echo ${{steps.filter.outputs.modified_files}}
    - name: Print 'deleted_files'
      run: echo ${{steps.filter.outputs.deleted_files}}
    - name: filter-test
      if: |
        steps.filter.outputs.added != 'true'
        || steps.filter.outputs.deleted != 'true'
        || steps.filter.outputs.modified != 'true'
        || steps.filter.outputs.any != 'true'
        || steps.filter.outputs.added_files != 'add.txt'
        || steps.filter.outputs.modified_files != 'LICENSE'
        || steps.filter.outputs.deleted_files != 'README.md'
      run: exit 1

  test-monorepo-structure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Create test files
      run: |
        # Create client files
        mkdir -p src/components
        touch src/components/Button.tsx
        mkdir -p src/pages
        touch src/pages/Home.tsx
        touch tsconfig.src.json
        touch vite.config.ts

        # Create server files
        mkdir -p srv
        touch srv/main.ts
        touch srv/app.module.ts
        mkdir -p prisma
        touch prisma/schema.prisma
        touch tsconfig.srv.json
        touch nest-cli.json

        # Create shared files
        mkdir -p .github/workflows
        touch .github/workflows/build-xmu-ci.yml

        # Add all files to git
        git add .

    - uses: ./
      id: filter
      with:
        base: HEAD
        filters: |
          client:
            pattern:
              - 'src/**'
              - 'tsconfig.src.json'
              - 'vite.config.ts'
          server:
            pattern:
              - 'srv/**'
              - 'prisma/**'
              - 'tsconfig.srv.json'
              - 'tsconfig.srv.build.json'
              - 'nest-cli.json'
          all:
            pattern:
              - '**'
              - '*'
            ignore:
              - 'src/**'
              - 'srv/**'
              - 'prisma/**'
              - 'nest-cli.json'
              - 'tsconfig.src.json'
              - 'vite.config.ts'
              - 'tsconfig.srv.json'
              - 'tsconfig.srv.build.json'

    - name: Test client files
      run: |
        echo "Client files: ${{ steps.filter.outputs.client_files }}"
        [[ "${{ steps.filter.outputs.client }}" == "true" ]] || exit 1
        [[ "${{ steps.filter.outputs.client_count }}" == "4" ]] || exit 1

    - name: Test server files
      run: |
        echo "Server files: ${{ steps.filter.outputs.server_files }}"
        [[ "${{ steps.filter.outputs.server }}" == "true" ]] || exit 1
        [[ "${{ steps.filter.outputs.server_count }}" == "5" ]] || exit 1

    - name: Test shared files
      run: |
        echo "All files: ${{ steps.filter.outputs.all_files }}"
        [[ "${{ steps.filter.outputs.all }}" == "true" ]] || exit 1
        [[ "${{ steps.filter.outputs.all_count }}" == "1" ]] || exit 1
        [[ "${{ steps.filter.outputs.all_files }}" == ".github/workflows/build-xmu-ci.yml" ]] || exit 1
